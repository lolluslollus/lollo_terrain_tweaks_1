local transf = require "transf"
local vec3 = require "vec3"
local modulesutil = require "modulesutil"
local constructionutil = require "constructionutil"

function data()

return { 
	cost = {
		price = 25000,
	},
	category = {
		categories = { "street access", },
	},
	description = {
		name = _("Street connection, repaintable, no pavement"),
		description = _("Street connection that can be used as an entrance and exit, repaintable, no pavement. Press and hold <shift> to apply a paint."),
		icon = "ui/construction/station/street/platform_entrance_exit_era_a.tga"
	}, 
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	type = "street_terminal_entrance_exit",
	order = {
		value = 1,
	},
	metadata = {
	},
	
	updateFn = function(result, transform, tag, slotId, addModelFn, params)
		local coordI, coordJ, variant = result.DemangleId(slotId)
	
		local tng = modulesutil.mul(transform, {0.0, -20.0, 0.0, 0.0})
		table.insert(result.edgeLists, {
				type = "STREET",
				params = {
					type = "street_station/entrance_no_ground_no_sidewalk.lua",
					tramTrackType = params.tramTrack == 0 and "NO" or params.tramTrack == 1 and "YES" or "ELECTRIC",
				},
				edges = {
					{ modulesutil.mul(transform, {0, 0, 0, 1}), tng },
					{ modulesutil.mul(transform, {0, -20, 0, 1}), tng },
				},
				snapNodes = { 1 }
		})
		
		local a = modulesutil.mul(transform, {-5.0, -10.0, 0.0, 1.0})
		local b = modulesutil.mul(transform, {-5.0, 5.0, 0.0, 1.0})
		local c = modulesutil.mul(transform, {5.0, 5.0, 0.0, 1.0})
		local d = modulesutil.mul(transform, {5.0, -10.0, 0.0, 1.0})
		table.insert(result.groundFaces, {  
				face =  { a, b, c, d },
				modes = {
					{
						type = "FILL",
						key = "industry_floor_high_priority.gtex.lua"
					},
				}
		})
		
		result.MakeEntrance(addModelFn, coordI, coordJ, variant, true, true)
	
		addModelFn("station/road/streetstation/" .. result.erastr .. "entr_cross.mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
	end,
	
	getModelsFn = function()
		local result = { }
		
		-- local result = {
			-- { 
				-- id = "station/road/streetstation/era_a/cargo_pltfrm_r_rep.mdl",
				-- transf = transf.transl(vec3.new(.0, .0, .0)),
			-- },
		-- }
		
		return result
	end
}

end
