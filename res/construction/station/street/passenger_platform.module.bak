local transf = require "transf"
local vec3 = require "vec3"
local modulesutil = require "modulesutil"
local constructionutil = require "constructionutil"
local luadump = require('lollo_terrain_tweaks/luadump')

function data()
return { 
	cost = {
		price = 12000,
	},
	category = {
		categories = { "passenger", },
	},
	description = {
		name = _("Passenger platform"),
		description = _("Platform for waiting passengers."),
		icon = "ui/construction/station/street/platform_passenger_era_a.tga"
	}, 
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	type = "street_terminal_passenger",
	order = {
		value = 7,
	},
	metadata = {
		passenger = true,
	},
	
	updateFn = function(result, transform, tag, slotId, addModelFn, params)
		print('LOLLO passenger_platform.module updateFn starting')
		-- luadump(true)(params)
		local coordI, coordJ, variant = result.DemangleId(slotId)

		local right = coordI >= 0
		local special = ((coordI >= 0 and coordI == result.rightLen) and not result.needOuterRight 
			or (coordI < 0 and coordI == result.leftLen) and not result.needOuterLeft) and "_spcl" or ""

        --special = "_spcl"
        local pavementExtraPath = params.pavement == 1 and 'pavementLikeStreet/' or ''
        print('LOLLO pavementExtraPath = ', pavementExtraPath)
		if right then 
			addModelFn("station/road/streetstation/" .. pavementExtraPath .. result.erastr .. "pltfrm_r_rep.mdl", transf.transl(vec3.new(.0, .0, .0)))
		else 
			addModelFn("station/road/streetstation/" .. pavementExtraPath .. result.erastr .. "pltfrm_l_rep.mdl", transf.transl(vec3.new(.0, .0, .0)))
		end
		
		local lorr = coordI >= 0 and "r" or "l"
		local top = coordI >= 0 and "_top" or "_btm"
		local btm = coordI >= 0 and "_btm" or "_top"
		if params.modules[result.MangleId({coordI, right and coordJ + 1 or coordJ - 1, 0})] == nil then
			addModelFn("station/road/streetstation/" .. pavementExtraPath .. result.erastr .. "pltfrm_" .. lorr .. top .. special .. ".mdl", transf.rotZTransl(0, vec3.new(.0, .0, .0)))
		end
		if params.modules[result.MangleId({coordI, right and coordJ - 1 or coordJ + 1, 0})] == nil then
			addModelFn("station/road/streetstation/" .. pavementExtraPath .. result.erastr .. "pltfrm_" .. lorr .. btm .. special .. ".mdl", transf.rotZTransl(0, vec3.new(.0, .0, .0)))
		end
		
		addModelFn("station/road/streetstation/" .. result.erastr .. "path_rep" ..result.cat .. ".mdl", transf.rotZTransl(right and 0 or math.pi, vec3.new(right and -5.0 or 5.0, .0, .0)))
		result.coord2terminalInfo[coordI][coordJ] = {
			model = #result.models - 1,
			terminal = 0,
		}
	end,
	
	-- getModelsFn = function()
		
	-- 	local result = {
	-- 		{ 
	-- 			id = "station/road/streetstation/era_a/pltfrm_r_top.mdl",
	-- 			transf = transf.transl(vec3.new(.0, .0, .0)),
	-- 		},
	-- 		{ 
	-- 			id = "station/road/streetstation/era_a/pltfrm_r_rep.mdl",
	-- 			transf = transf.transl(vec3.new(.0, .0, .0)),
	-- 		},
	-- 		{ 
	-- 			id = "station/road/streetstation/era_a/pltfrm_r_btm.mdl",
	-- 			transf = transf.transl(vec3.new(.0, .0, .0)),
	-- 		},
	-- 	}
		
	-- 	return result
	-- end
}

end
