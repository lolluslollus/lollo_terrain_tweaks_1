local vec3 = require "vec3"
local transf = require "transf"
local constructionutil = require "constructionutil"
local paramsutil = require "paramsutil"
local colliderutil = require "colliderutil"
local constructionutil = require "constructionutil" 

--Begin Generated
local generatedData = {
	["cargo_size_n_r_rep"] = {
		models = {
			["station/rail/asset/cargo_lamps.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 15.00000, 10.00000, 0.34000, 1.00000 },
			},
		},
	},
	["cargo_size_n_l_rep"] = {
		models = {
			["station/rail/asset/cargo_lamps.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -15.00000, 10.00000, 0.34000, 1.00000 },
			},
		},
	},
	["era_a_size_1_r"] = {
		models = {
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.91389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 9.34189, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.91389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.66392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 7.46392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 8.76392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 10.06392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 11.36392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.66392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 13.30000, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_1_r"] = {
		models = {
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.91389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 9.43389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.91389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.71339, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 7.46392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 8.76392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 11.36392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 10.06392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.66392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 13.30000, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_1_r"] = {
		models = {
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.91389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 9.34089, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.91389, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.66392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 7.46392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 8.76392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 10.06392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 11.36392, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.66392, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 13.30000, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_2_r"] = {
		models = {
			["station/rail/asset/era_a_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 19.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 16.55426, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 13.41026, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 14.98226, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 16.55426, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_round_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 24.60000, 0.00000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 7.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 22.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 18.63271, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 10.83270, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.13271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 13.43271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 14.73271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 17.33270, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 18.63271, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 10.36879, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_2_r"] = {
		models = {
			["station/rail/asset/era_b_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 19.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 16.46809, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 13.50226, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 14.98226, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 16.46809, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_round_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 24.60000, 0.00000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 7.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 22.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 18.68514, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 10.83270, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.13271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 13.43271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 14.73271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 17.33270, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 18.63271, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 10.36879, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_2_r"] = {
		models = {
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 19.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 16.55610, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 13.40926, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 14.98226, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 16.55610, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_round_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 24.60000, 0.00000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 7.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 22.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 18.63270, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 10.83270, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 12.13271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 13.43271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 14.73271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.03271, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 17.33270, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 18.63270, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 10.36879, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_3_r"] = {
		models = {
			["station/rail/asset/era_a_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 24.64194, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 22.19619, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16327, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 31.51297, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 19.05219, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 8.59055, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 29.94025, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 20.62419, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 22.19619, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16327, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 31.51297, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 35.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 13.04908, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 27.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.27464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.47464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 17.77464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 19.07464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 20.37464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 22.97464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.27464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_2.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 16.01072, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_3_r"] = {
		models = {
			["station/rail/asset/era_b_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 24.64194, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 22.11002, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16838, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 31.51808, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 19.14420, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 8.68255, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 30.03225, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 20.62419, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 22.11002, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16838, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 31.51808, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 35.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 13.04908, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 27.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.32707, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.47464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 17.77464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 19.07464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 20.37464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 22.97464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.27464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 16.01072, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_3_r"] = {
		models = {
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 24.64194, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 22.19804, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16339, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 31.51309, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 19.05120, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 8.58955, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 29.93925, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 20.62419, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 22.19804, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16339, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 31.51309, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 35.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 13.04908, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 27.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.27464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 16.47464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 17.77464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 19.07464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 20.37464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.67464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 22.97464, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.27464, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 16.01072, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_4_r_start"] = {
		models = {
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16327, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 8.59055, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16327, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_3.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 14.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_a_size_4_r_rep"] = {
		models = {
			["station/rail/asset/era_a_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 29.17857, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 26.73283, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 23.58883, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 25.16083, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 26.73283, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 18.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 31.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 28.81128, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.01128, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 22.31128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 23.61128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.91128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 27.51128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 28.81128, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_2.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 20.54736, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_4_r_end"] = {
		models = {
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 41.51296, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 39.94025, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 41.51296, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 45.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_3.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 36.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_b_size_4_r_start"] = {
		models = {
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16838, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 8.68255, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16838, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_b_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 14.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_b_size_4_r_rep"] = {
		models = {
			["station/rail/asset/era_b_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 29.17857, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 26.64666, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 23.68083, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 25.16083, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 26.64666, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 18.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 31.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 28.86371, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.01128, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 22.31128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 23.61128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.91128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 27.51128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 28.81128, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 20.54736, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_4_r_end"] = {
		models = {
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 41.51807, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 40.03225, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 41.51807, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 45.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_b_3.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 36.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_c_size_4_r_start"] = {
		models = {
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16339, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 8.58955, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 10.16339, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 14.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_c_size_4_r_rep"] = {
		models = {
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.20000, 29.17857, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 26.73467, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 23.58783, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 25.16083, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 26.73467, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 18.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 31.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 28.81127, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 21.01128, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 22.31128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 23.61128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 24.91128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 26.21128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 27.51128, 0.30000, 1.00000 },
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 13.23333, 28.81127, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.95000, 20.54736, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_4_r_end"] = {
		models = {
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 41.51308, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 39.93925, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ -0.00000, -1.00000, -0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 1.00000, 0.00000, 14.00000, 41.51308, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 13.80000, 45.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_c_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 14.60000, 36.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_a_size_1_l"] = {
		models = {
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.08611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.65811, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.08611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 7.33608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 12.53608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.23608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 9.93608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 8.63608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 7.33608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 13.30000, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_1_l"] = {
		models = {
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.08611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.56611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.08611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 7.28660, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 12.53608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.23608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 9.93608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 8.63608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 7.33608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 13.30000, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_1_l"] = {
		models = {
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.08611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.65911, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.08611, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 7.33608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 12.53608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.23608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 9.93608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 8.63608, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 7.33608, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 13.30000, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_2_l"] = {
		models = {
			["station/rail/asset/era_a_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 11.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 13.44574, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 16.58974, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 15.01774, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 13.44574, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_round_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.00000, 24.60000, 0.00000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 22.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 7.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.36729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 19.16729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 17.86729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 16.56730, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.26729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 12.66729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.36729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 19.63121, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_2_l"] = {
		models = {
			["station/rail/asset/era_b_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 11.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 13.53191, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 16.49774, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 15.01774, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 13.53191, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_round_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.00000, 24.60000, 0.00000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 22.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 7.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.31486, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 19.16729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 17.86729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 16.56730, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.26729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 12.66729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.36729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 19.63121, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_2_l"] = {
		models = {
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 11.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 13.44390, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 16.59074, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 15.01774, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 13.44390, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_round_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.00000, 24.60000, 0.00000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 22.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 7.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.36729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 19.16729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 17.86729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 16.56730, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.26729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 13.96729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 12.66729, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 11.36729, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 19.63121, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_3_l"] = {
		models = {
			["station/rail/asset/era_a_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 15.35806, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 17.80381, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 29.83673, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48703, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 20.94781, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 31.40944, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.05975, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 19.37580, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 17.80381, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 29.83673, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48703, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 35.20000, 0.30000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 26.95092, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 13.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.72536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.52536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 22.22536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 20.92536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 19.62536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 17.02536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.72536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 23.98928, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_3_l"] = {
		models = {
			["station/rail/asset/era_b_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 15.35806, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 17.88998, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 29.83162, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48192, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 20.85580, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 31.31745, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.96775, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 19.37580, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 17.88998, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 29.83162, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48192, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 35.20000, 0.30000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 26.95092, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 13.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.67293, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.52536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 22.22536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 20.92536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 19.62536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 17.02536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.72536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 23.98928, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_3_l"] = {
		models = {
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 15.35806, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 17.80196, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 29.83660, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48691, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 20.94880, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 31.41045, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.06075, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 19.37580, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 17.80196, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 29.83660, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48691, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 35.20000, 0.30000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 26.95092, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 13.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.72536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.52536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 22.22536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 20.92536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 19.62536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 18.32536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 17.02536, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 15.72536, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 23.98928, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_4_l_end"] = {
		models = {
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 39.83672, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 41.40945, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 39.83672, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 45.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_3.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 36.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_a_size_4_l_rep"] = {
		models = {
			["station/rail/asset/era_a_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 20.82143, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 23.26717, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 26.41117, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 24.83917, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 23.26717, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 32.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 18.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 21.18872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 28.98872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 27.68872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 26.38872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 25.08872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 22.48872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 21.18872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_a_2.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 29.45264, 0.30000, 1.00000 },
			},
		},
	},
	["era_a_size_4_l_start"] = {
		models = {
			["station/road/streetstation/asset/bench_era_a_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48703, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.05975, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_a_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48703, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_a_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_a_3.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 14.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_b_size_4_l_end"] = {
		models = {
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 39.83162, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 41.31744, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 39.83162, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 45.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_b_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 36.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_b_size_4_l_rep"] = {
		models = {
			["station/rail/asset/era_b_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 20.82143, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 23.35334, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 26.31917, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 24.83917, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 23.35334, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 32.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_b_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 18.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 21.13629, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 28.98872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 27.68872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 26.38872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 25.08872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 22.48872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 21.18872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_b_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 29.45264, 0.30000, 1.00000 },
			},
		},
	},
	["era_b_size_4_l_start"] = {
		models = {
			["station/road/streetstation/asset/bench_era_b_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48192, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 9.96775, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_b_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48192, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_b_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_b_3.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 14.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_c_size_4_l_end"] = {
		models = {
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 39.83660, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 41.41044, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 39.83660, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 45.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_c_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 36.00000, 0.00000, 1.00000 },
			},
		},
	},
	["era_c_size_4_l_rep"] = {
		models = {
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.20000, 20.82143, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 23.26533, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 26.41217, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 24.83917, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 23.26533, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_1.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 32.00000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_small_era_c_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 18.20000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 21.18872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 28.98872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/shelter_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 27.68872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 26.38872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 25.08872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 23.78872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 22.48872, 0.30000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -13.23333, 21.18872, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/tickets_era_c_1.mdl"] = {
				{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.95000, 29.45264, 0.30000, 1.00000 },
			},
		},
	},
	["era_c_size_4_l_start"] = {
		models = {
			["station/road/streetstation/asset/bench_era_c_l_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48691, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_r_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 10.06075, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bench_era_c_rep_1.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 1.00000, 0.00000, -14.00000, 8.48691, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/bus_stop_sign_era_c_1.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -13.80000, 4.80000, 0.30000, 1.00000 },
			},
			["station/road/streetstation/asset/com_large_era_c_2.mdl"] = {
				{ 0.00000, -1.00000, 0.00000, 0.00000, 1.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -14.60000, 14.00000, 0.00000, 1.00000 },
			},
		},
	},
}
--End Generated

local function makeParams() 
	return {
		-- {
			-- key = "type",
			-- name = _("Type"),
			-- values = { _("Passenger"), _("Cargo") },
			-- defaultIndex = 0,
		-- },
		{
			key = "platL",
			name = _("Platforms Left"),
			values = { _("0"), _("1"), _("2"), _("3") },
			defaultIndex = 1,
		},
		{
			key = "platR",
			name = _("Platforms Right"),
			values = { _("0"), _("1"), _("2"), _("3") },
			defaultIndex = 1,
		},
		{
			key = "length",
			name = _("Length"),
			values = { _("10m"), _("20m"), _("30m") },
			defaultIndex = 0,
			yearFrom = 1850,
			yearTo = 1950,
		},
		{
			key = "length2",
			name = _("Length"),
			values = { _("10m"), _("20m"), _("30m") },
			defaultIndex = 1,
			yearFrom = 1950,
			yearTo = 0,
		},
	}
end

local function makeConstructionTemplates()
	local templates = {}
	
	local function addPassengerTemplate(from, to, icon)
		table.insert(templates, {
			type = "DYNAMIC",
			constructionType = "STREET_STATION",
			availability = {
				yearFrom = from,
				yearTo = to
			},
			description = {
				name = _("Bus/tram station"),
				description = _("Modular bus/tram station."),
				icon = icon
			},
			data = {
				params = makeParams(),
			}
		})
	end
	
	addPassengerTemplate(1850, 1920, "ui/construction/station/street/passenger_era_a.tga")
	addPassengerTemplate(1920, 1980, "ui/construction/station/street/passenger_era_b.tga")
	addPassengerTemplate(1980, 0, "ui/construction/station/street/passenger_era_c.tga")
	
	local function addCargoTemplate(from, to, icon)
		table.insert(templates, {	
			type = "DYNAMIC",
			constructionType = "STREET_STATION_CARGO",
			availability = {
				yearFrom = from,
				yearTo = to
			},
			description = {
				name = _("Truck station"),
				description = _("Modular truck station."),
				icon = icon
			},
			data = {
				params = makeParams(),
			}
		})
	end
	
	addCargoTemplate(1850, 1920, "ui/construction/station/street/cargo_era_a.tga")
	addCargoTemplate(1920, 1980, "ui/construction/station/street/cargo_era_b.tga")
	addCargoTemplate(1980, 0, "ui/construction/station/street/cargo_era_c.tga")
	
	return templates

end

function data()

return { 
	type = "STREET_STATION",
	description = {
		name = _("Street station"),
		description = _("Modular street station."),
	},
	availability = {
		yearFrom = 0,
		yearTo = 0
	},
	params = {
		paramsutil.makeTramTrackParam1(),
		paramsutil.makeTramTrackParam2(),
	},
	constructionTemplates = makeConstructionTemplates(),
	order = 5000,
	createTemplateFn = function(params)
		local result = {}
		-- local cargo = params.type == 1
		local cargo = params.templateIndex >= 3
	
		local length = params.year < 1950 and params.length or params.length2
	
		local MangleId = function(coords)
			return 200000 * (coords[2] + 100) + 100 * (coords[1] + 100) + coords[3]
		end
		local module = cargo and "station/street/cargo_platform.module" or "station/street/passenger_platform.module"
		
		for i = -1, 0 - params.platL, -1 do
			for j = 0, length do
				result[MangleId({i, j - math.floor(length / 2), cargo and 1 or 0})] = module
			end
		end
		for i = 0, params.platR - 1 do
			for j = 0, length do
				result[MangleId({i, j - math.floor(length / 2), cargo and 1 or 0})] = module
			end
		end
		result[MangleId({55, 0, 3})] = "station/street/entrance_exit.module"
		
		return result
	end,
	updateFn = function(params)
		local result = { }
		
		local cargoSpacing = {5, 5, 5, 5}
		local passengerSpacing = {2.5, 2.5, 5, 5}
		
		local maxWidth = 10
		local maxHeight = 10
		
		local centerSize = 20
		local trackSize = 5
		local passengerPlatformSize = 5
		local cargoPlatformSize = 10
		
		result.slots = {}
		result.models = {}
		result.edgeLists = {}
		result.slotConfig = {
			street_terminal_entrance_exit = {
				maxModules = -1,
				message = "",
				skipCollisionCheck = true,
			},
			street_terminal_exit = {
				maxModules = -1,
				message = "",
				skipCollisionCheck = true,
			},
			street_terminal_entrance = {
				maxModules = -1,
				message = "",
				skipCollisionCheck = true,
			},
		}

		result.MangleId = function(coords)
			return 200000 * (coords[2] + 100) + 100 * (coords[1] + 100) + coords[3]
		end
		
		result.DemangleId = function(slotId)
			local rem = slotId % 100
			local variant = rem
			slotId = (slotId - rem) / 100
			rem = slotId % 2000
			local coordI = rem - 100
			slotId = (slotId - rem) / 2000
			return coordI, slotId - 100, variant
		end
		
		-- local coord2SlotId = {}
		local erastr = "era_a/"
		if params.year > 1980 then
			erastr = "era_c/"
		elseif params.year > 1920 then
			erastr = "era_b/"
		end
		local cat = ""
		if params.tramTrack == 0 then cat = "_no_tram" 
		elseif params.tramTrack == 1 then cat = "_no_cat"
		elseif params.tramTrack == 2 then cat = "" end
		
		local minCoordI = 0
		local maxCoordI = -1
		local minCoordJ = {}
		local maxCoordJ = {}
		for slotId, module in pairs(params.modules) do
			local coordI, coordJ, variant = result.DemangleId(slotId)
			
			minCoordI = math.min(minCoordI, coordI)
			maxCoordI = math.max(maxCoordI, coordI)
			minCoordJ[coordI] = math.min(minCoordJ[coordI] or 1000, coordJ)
			maxCoordJ[coordI] = math.max(maxCoordJ[coordI] or -1000, coordJ)
			
			local variant = module.metadata.cargo and 1 or 0
			
			-- coord2SlotId[{coordI, coordJ, variant}] = module
			--print("Module at " .. coordI .. " ; " .. coordJ .. " v. " .. variant)
			-- print(module)
		end
		
		local range0 = {}
		local range1 = {}
		for coordI = minCoordI - 1, maxCoordI + 1 do
			
			range0[coordI] = 1
			for coordJ = 0, minCoordJ[coordI] or 0, -1 do
				if params.modules[result.MangleId({coordI, coordJ, 0})] ~= nil or params.modules[result.MangleId({coordI, coordJ, 1})] ~= nil then
					range0[coordI] = coordJ
				else 
					break
				end
			end
			range1[coordI] = -1
			for coordJ = 0, maxCoordJ[coordI] or 0 do
				if params.modules[result.MangleId({coordI, coordJ, 0})] ~= nil or params.modules[result.MangleId({coordI, coordJ, 1})] ~= nil then
					range1[coordI] = coordJ
				else 
					break
				end
			end
			--print(coordI .. " range: " .. (range0[coordI] or "none") .. " to " .. (range1[coordI] or "none"))
		end
		
		local leftLen = 0
		if range0[-1] ~= 1 or range1[-1] ~= -1 then
			leftLen = -1
		end
		for coordI = -1, minCoordI, -1 do
			if (range0[coordI-1] ~= 1 or range1[coordI-1] ~= -1) and range0[coordI] <= range1[coordI - 1] and range1[coordI] >= range0[coordI - 1] then
				leftLen = leftLen - 1
			else
				break
			end
		end
		local rightLen = -1
		if range0[0] ~= 1 or range1[0] ~= -1 then
			rightLen = 0
		end
		for coordI = 0, maxCoordI do
			if (range0[coordI+1] ~= 1 or range1[coordI+1] ~= -1) and range0[coordI] <= range1[coordI + 1] and range1[coordI] >= range0[coordI + 1] then
				rightLen = rightLen + 1
			else
				break
			end
		end
		
		if range0[-1] == 1 and range1[-1] == -1 then
			leftLen = 0
		end
		if range0[0] == 1 and range1[0] == -1 then
			rightLen = -1
		end
		
		result.heightAt0 = {}
		result.heightAt1 = {}
		for i = leftLen, rightLen do
			result.heightAt0[i] = math.min(range0[i + (i >= 0 and 1 or -1)] or 1, range0[i])
			result.heightAt1[i] = math.max(range1[i + (i >= 0 and 1 or -1)] or -1, range1[i])
		end
		
		local coordI2varaintAndPos = {}
		local coordIloc = centerSize * 0.5
		local lastSize =  - trackSize
		for coordI = 0, rightLen do
			coordIloc = coordIloc + trackSize + lastSize
			if params.modules[result.MangleId({coordI, 0, 0})] ~= nil then
				lastSize = 0.5 * passengerPlatformSize
				coordIloc = coordIloc + lastSize
				coordI2varaintAndPos[coordI] = { 0, coordIloc }
			else
				lastSize = 0.5 * cargoPlatformSize
				coordIloc = coordIloc + lastSize
				coordI2varaintAndPos[coordI] = { 1, coordIloc }
			end
		end
		coordIloc = - centerSize * 0.5
		lastSize = - trackSize
		for coordI = -1, leftLen, -1 do
			coordIloc = coordIloc - trackSize - lastSize
			if params.modules[result.MangleId({coordI, 0, 0})] ~= nil then
				lastSize = 0.5 * passengerPlatformSize
				coordIloc = coordIloc - lastSize
				coordI2varaintAndPos[coordI] = { 0, coordIloc }
			else
				lastSize = 0.5 * cargoPlatformSize
				coordIloc = coordIloc - lastSize
				coordI2varaintAndPos[coordI] = { 1, coordIloc }
			end
		end
		
		--print("Span: " .. leftLen .. ";" .. rightLen)
		
		result.coord2terminalInfo = {}
		for coordI = math.max(leftLen - 1, -maxWidth), math.min(rightLen + 1, maxWidth) do
			result.coord2terminalInfo[coordI] = {}
			
			local variant = params.modules[result.MangleId({coordI, 0, 0})] ~= nil and 0 or 1
			local slotType = variant == 0 and "street_terminal_passenger" or "street_terminal_cargo"
			
			--print("Range at coord " .. coordI .. ";" .. (range0[coordI] or 0) .. ";" .. (range1[coordI] or 0))
			for coordJ = math.max((range0[coordI] or 0) - 1, -maxHeight), math.min((range1[coordI] or 0) + 1, maxHeight) do
				if (range0[coordI] == 1 and range1[coordI] == -1) or range0[coordI] == nil or range1[coordI] == nil then
					--print("Add Both  slots at " .. coordI .. ";" .. coordJ)
					local offs = coordI >= 0 and -1 or 1
					
					local passXPos = 0
					local cargoXPos = 0
					if coordI == 0 then 
						passXPos = (centerSize + passengerPlatformSize) * 0.5
						cargoXPos = (centerSize + cargoPlatformSize) * 0.5
					elseif coordI == -1 then 
						passXPos = - (centerSize + passengerPlatformSize) * 0.5
						cargoXPos = - (centerSize + cargoPlatformSize) * 0.5
					else
						local prevSize = 0.5 * (coordI2varaintAndPos[coordI + offs][1] == 0 and passengerPlatformSize or cargoPlatformSize)
						passXPos = coordI2varaintAndPos[coordI + offs][2] - offs * (trackSize + 0.5 * passengerPlatformSize + prevSize)
						cargoXPos = coordI2varaintAndPos[coordI + offs][2] - offs * (trackSize + 0.5 * cargoPlatformSize + prevSize)
					end
					table.insert(result.slots, {
						id = result.MangleId({coordI, coordJ, 0}),
						transf = transf.transl(vec3.new(passXPos, coordJ * 10, .0)),
						type = "street_terminal_passenger",
						spacing = passengerSpacing
					})
					table.insert(result.slots, {
						id = result.MangleId({coordI, coordJ, 1}),
						transf = transf.transl(vec3.new(cargoXPos, coordJ * 10, .0)),
						type = "street_terminal_cargo",
						spacing = cargoSpacing
					})
				elseif coordI2varaintAndPos[coordI] ~= nil then
					--print("Add A slots at " .. coordI .. ";" .. coordJ .. ";" .. slotType)
					table.insert(result.slots, {
						id = result.MangleId({coordI, coordJ, variant}),
						transf = transf.transl(vec3.new(coordI2varaintAndPos[coordI][2], coordJ * 10, .0)),
						type = slotType,
						spacing = variant == 0 and passengerSpacing or cargoSpacing
					})
				end
			end
		end
		
		local addModel = function(name, transf, tag)
			table.insert(result.models, {
				id = name,
				transf = transf,
				tag = tag
			})
		end
		
		-- Init some values
		local platformLength = 10
		
		local entrance_bottom = params.modules[result.MangleId({55, 0, 3})] ~= nil or params.modules[result.MangleId({55, 0, 4})] ~= nil
		local exit_bottom = params.modules[result.MangleId({55, 0, 3})] ~= nil or params.modules[result.MangleId({55, 0, 5})]
		local entrance_top = params.modules[result.MangleId({55, 1, 3})] ~= nil or params.modules[result.MangleId({55, 1, 4})] ~= nil
		local exit_top = params.modules[result.MangleId({55, 1, 3})] ~= nil or params.modules[result.MangleId({55, 1, 5})] ~= nil
		
		local no_right = range0[0] == 1 and range1[0] == -1
		local no_left = range0[-1] == 1 and range1[-1] == -1
		local no_right2 = no_right or range0[1] == 1 and range1[1] == -1
		local no_left2 = no_left or range0[-2] == 1 and range1[-2] == -1
		
		local lrs, trs, lls, tls
		local needOuterLeft = false
		if params.modules[result.MangleId({leftLen, 0, 3})] then needOuterLeft = true lls = true end
		if params.modules[result.MangleId({leftLen, 0, 4})] then needOuterLeft = true end
		if params.modules[result.MangleId({leftLen, 0, 5})] then needOuterLeft = true lls = true end
		if params.modules[result.MangleId({leftLen, 1, 3})] then needOuterLeft = true tls = true end
		if params.modules[result.MangleId({leftLen, 1, 4})] then needOuterLeft = true tls = true end
		if params.modules[result.MangleId({leftLen, 1, 5})] then needOuterLeft = true end
		for j = range0[leftLen] - 2, 2 * range1[leftLen] + 4 do
			if params.modules[result.MangleId({leftLen -1, j, 6})] then needOuterLeft = true break
			elseif params.modules[result.MangleId({leftLen -1, j, 7})] then needOuterLeft = true break
			elseif params.modules[result.MangleId({leftLen -1, j, 8})] then needOuterLeft = true break end
		end
		local needOuterRight = false
		if params.modules[result.MangleId({rightLen, 0, 3})] then needOuterRight = true lrs = true end
		if params.modules[result.MangleId({rightLen, 0, 4})] then needOuterRight = true lrs = true end
		if params.modules[result.MangleId({rightLen, 0, 5})] then needOuterRight = true end
		if params.modules[result.MangleId({rightLen, 1, 3})] then needOuterRight = true trs = true end
		if params.modules[result.MangleId({rightLen, 1, 4})] then needOuterRight = true end
		if params.modules[result.MangleId({rightLen, 1, 5})] then needOuterRight = true trs = true end
		for j = range0[rightLen] - 2, 2 * range1[rightLen] + 4 do
			if params.modules[result.MangleId({rightLen +1, j, 6})] then needOuterRight = true break
			elseif params.modules[result.MangleId({rightLen +1, j, 7})] then needOuterRight = true break
			elseif params.modules[result.MangleId({rightLen +1, j, 8})] then needOuterRight = true break end
		end
		
		-- Center part
		--if not no_left then -- right path FOR LEFT
			local low = entrance_bottom and math.min(math.min(range0[-1], range0[0]), math.min(leftLen < 0 and range0[-2] or 1, rightLen > 0 and range0[1] or 1)) or math.min(range0[-1], leftLen < 0 and range0[-2] or 1)
			local high = exit_top and math.max(math.max(range1[-1], range1[0]), math.max(leftLen < 0 and range1[-2] or -1, rightLen > 0 and range1[1] or -1)) or math.max(range1[-1], leftLen < 0 and range1[-2] or -1)
			for j = low, high do
				addModel("station/road/streetstation/" .. erastr .. "cntr_nostop" .. cat .. ".mdl", transf.transl(vec3.new(2.5, j * platformLength, .0)), "center")
			end
		--end
		--if not no_right then -- left path FOR RIGHT
			local low = exit_bottom and math.min(math.min(range0[-1], range0[0]), math.min(leftLen < 0 and range0[-2] or 1, rightLen > 0 and range0[1] or 1)) or math.min(range0[0], rightLen > 0 and range0[1] or 1)
			local high = entrance_top and math.max(math.max(range1[-1], range1[0]), math.max(leftLen < 0 and range1[-2] or -1, rightLen > 0 and range1[1] or -1)) or math.max(range1[0], rightLen > 0 and range1[1] or -1)
			for j = low, high do
				addModel("station/road/streetstation/" .. erastr .. "cntr_nostop" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(-2.5, j * platformLength, .0)), "center")
			end
		--end
		
		local elow = math.min(math.min(range0[-2] or 1, range0[-1]), math.min(range0[0], range0[1] or 1))
		local ehigh = math.max(math.max(range1[-2] or -1, range1[-1]), math.max(range1[0], range1[1] or -1)) + 2
		if range0[1] == 1 and range1[1] == -1 and not needOuterRight then
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_r_spcl_pers" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 0.0 + (elow - 1) * platformLength, .0)))
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_r_spcl_pers" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 0.0 + ehigh * platformLength - 5, .0)))
		end
		if range0[-2] == 1 and range1[-2] == -1 and not needOuterLeft then
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_l_spcl_pers" .. cat .. ".mdl", transf.transl(vec3.new(0.0, -10.0 + elow * platformLength, .0)))
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_l_spcl_pers" .. cat .. ".mdl", transf.transl(vec3.new(0.0, -10.0 + ehigh * platformLength + 5, .0)))
		end
		
		-- Left center curve
		if range0[-1] ~= 1 and range1[-1] ~= -1 then
			local low = math.min(range0[-2], range0[-1])
			local high = math.max(range1[-2], range1[-1])
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, (range0[-1] - 1) * platformLength, .0)), "center")
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_r" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(0.0, (range1[-1] + 1) * platformLength, .0)), "center")
			
			local magicNumber = 35
			local prevPassenger = coordI2varaintAndPos[-1][1] == 0
			local pos = coordI2varaintAndPos[-1][2] + ((prevPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize + magicNumber) * 0.5
			
			local continue = range0[-2] ~= 1 and range1[-2] ~= -1
			
			if continue or needOuterLeft then
				-- Enter from side always
				addModel("station/road/streetstation/" .. erastr .. "path_top_str" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos - 10, (low - 1) * platformLength, .0)), "link_-" .. 1 .. "_btm")
				-- Exit from side always
				addModel("station/road/streetstation/" .. erastr .. "path_btm_str" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos - 10, (high + 1) * platformLength, .0)), "link_-" .. 1 .. "_top")
			end
		end
		-- Right center curve
		if range0[0] ~= 1 and range1[0] ~= -1 then
			local low = math.min(range0[0], range0[1])
			local high = math.max(range1[0], range1[1])
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, ( range0[0] - 1) * platformLength, .0)), "center")
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_l" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(0.0, ( range1[0] + 1) * platformLength, .0)), "center")
			
			local magicNumber = 35
			local prevPassenger = coordI2varaintAndPos[0][1] == 0
			local pos = coordI2varaintAndPos[0][2] - ((prevPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize + magicNumber) * 0.5
			
			local continue = range0[1] ~= 1 and range1[1] ~= -1
			
			if continue or needOuterRight then
				-- Enter from side always
				addModel("station/road/streetstation/" .. erastr .. "path_btm_str" .. cat .. ".mdl", transf.transl(vec3.new(pos + 10, (low - 1) * platformLength, .0)), "link_" .. 0 .. "_btm")
				-- Exit from side always
				addModel("station/road/streetstation/" .. erastr .. "path_top_str" .. cat .. ".mdl", transf.transl(vec3.new(pos + 10, (high + 1) * platformLength, .0)), "link_" .. 0 .. "_top")
			end
		end
		-- Center connector
		if math.min(range0[-1], range0[-2] or 1) == math.min(range0[0], range0[1] or 1) and not (no_left and no_right) then -- bottom
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_con" .. cat .. ".mdl", transf.transl(vec3.new(0.0, (math.min(range0[0], range0[1] or 1) - 1) * platformLength, .0)), "conn_btm")
		elseif range0[0] == range0[-1] and not (no_left and no_right) then
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_con" .. cat .. ".mdl", transf.transl(vec3.new(0.0, (range0[0] - 1) * platformLength, .0)), "conn_btm")
		end
		if math.max(range1[-1], range1[-2] or -1) == math.max(range1[0], range1[1] or -1) and not (no_left and no_right) then -- top
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_con" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(0.0, (math.max(range1[0], range1[1] or -1) + 1) * platformLength, .0)), "conn_top")
		elseif range1[0] == range1[-1] and not (no_left and no_right) then
			addModel("station/road/streetstation/" .. erastr .. "cntr_btm_con" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(0.0, (range1[0] + 1) * platformLength, .0)), "conn_top")
		end
		
		-- Add snakes
		if not no_left and (range0[-1] > math.min(range0[0], range0[1] or 1) or exit_bottom) then -- lb snake math.min(, range0[-2] or 1)
			addModel("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, (range0[-1] - 1) * platformLength, .0)), "snake_r_btm")
		end
		if not no_right and (range0[0] > math.min(range0[-1], range0[-2] or 1) or entrance_bottom) then -- rb snake math.min(, range0[1] or 1)
			addModel("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, (range0[0] - 1) * platformLength, .0)), "snake_r_btm")
		end
		if not no_left and (range1[-1] < math.max(range1[0], range1[1] or -1) or entrance_top) then -- lt snake (max range1 -1???)
			addModel("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_r" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(0.0, (range1[-1] + 1) * platformLength, .0)), "snake_r_btm")
		end
		if not no_right and (range1[0] < math.max(range1[-1], range1[-2] or -1) or exit_top) then -- rt snake  max, range1[1] or -1)
			addModel("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_l" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(0.0, (range1[0] + 1) * platformLength, .0)), "snake_r_btm")
		end
		
		-- Add loop ups and down (last if is for big circle)
		-- bottom/leftloop - dir: right/up
		if not no_left2 and (math.min(range0[-1], range0[-2] or 1) <= range0[0] or (range0[-2] or 1 < range0[-1])) and math.min(range0[-1], range0[-2] or 1) ~= range0[-1] then
			
			if math.min(range0[0], range0[1] or 1) > math.min(range0[-1], range0[-2] or 1) then
				addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.transl(vec3.new(-15, (math.min(range0[-1], range0[-2] or 1) - 1) * platformLength - 0, .0)), "coon_" .. 0 .. "_btm")
			else -- fx
				addModel("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(5, (math.min(range0[-1], range0[-2] or 1) - 1) * platformLength - 0, .0)), "coon_" .. 0 .. "_btm")
			end
			-- extern pedestrian loop
		end
		-- bottom/leftloop - dir: up/right
		if not no_right2 and (math.min(range0[0], range0[1] or 1) > math.min(range0[-1], range0[-2] or 1)) then
			addModel("station/road/streetstation/" .. erastr .. "cntr_con_l" .. cat .. ".mdl", transf.transl(vec3.new(-5, (math.min(range0[0], range0[1] or 1) - 1) * platformLength - 10, .0)), "coon_" .. 0 .. "_btm")
			-- intern pedestrian loop
		end
		-- bottom/rightloop - dir: down/right
		if not no_right2 and math.min(range0[0], range0[1] or 1) ~= range0[0] then
			if math.min(range0[-1], range0[-2] or 1) > math.min(range0[0], range0[1] or 1) then
				addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(15, (math.min(range0[0], range0[1] or 1) - 1) * platformLength + 0, .0)), "coon_" .. 0 .. "_btm")
			else
				addModel("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(-5, (math.min(range0[0], range0[1] or 1) - 1) * platformLength + 0, .0)), "coon_" .. 0 .. "_btm")
			end
		end
		-- bottom/rightloop - dir: right/down
		if not no_left2 and (math.min(range0[-1], range0[-2] or 1) > math.min(range0[0], range0[1] or 1)) then
			addModel("station/road/streetstation/" .. erastr .. "cntr_con_r" .. cat .. ".mdl", transf.transl(vec3.new(5, (math.min(range0[-1], range0[-2] or 1) - 1) * platformLength - 10, .0)), "coon_" .. 0 .. "_btm")
		end
		-- top/leftloop - dir: up/left
		if not no_left2 and math.max(range1[-1], range1[-2] or 1) ~= range1[-1] then
			if math.max(range1[-1], range1[-2] or 1) > math.max(range1[0], range1[1] or 1) then
				addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.transl(vec3.new(-15, (math.max(range1[-1], range1[-2] or 1) + 1) * platformLength, .0)), "coon_" .. 0 .. "_top")
			else -- fx
				addModel("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.rotZTransl(0, vec3.new(5, (math.max(range1[-1], range1[-2] or 1) + 1) * platformLength + 0, .0)), "coon_" .. 0 .. "_top")
			end
		end
		-- top/leftloop - dir: left/up
		if not no_right2 and (math.max(range1[0], range1[1] or -1) < math.max(range1[-1], range1[-2] or -1)) then
			addModel("station/road/streetstation/" .. erastr .. "cntr_con_r" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(-5, (math.max(range1[0], range1[1] or 1) + 1) * platformLength + 10, .0)), "coon_" .. 0 .. "_top")
		end
		-- top/rightloop - dir: left/down
		if not no_right2 and math.max(range1[0], range1[1] or 1) ~= range1[0] then
			if math.max(range1[0], range1[1] or 1) > math.max(range1[-1], range1[-2] or 1) then
				addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(15, (math.max(range1[0], range1[1] or 1) + 1) * platformLength, .0)), "coon_" .. 0 .. "_top")
			else
				addModel("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.rotZTransl(0, vec3.new(-5, (math.max(range1[0], range1[1] or 1) + 1) * platformLength + 0, .0)), "coon_" .. 0 .. "_top")
			end
		end
		-- top/rightloop - dir: down/left
		if not no_left2 and (math.max(range1[-1], range1[-2] or -1) < math.max(range1[0], range1[1] or -1)) then
			addModel("station/road/streetstation/" .. erastr .. "cntr_con_l" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(5, (math.max(range1[-1], range1[-2] or 1) + 1) * platformLength + 10, .0)), "coon_" .. 0 .. "_top")
		end
		
		result.h0 = {}
		result.h1 = {}
		
		-- Right extern
		for i = 1, rightLen do
			-- Right bottom curves
			local magicNumber = 35
			local thisPassenger = coordI2varaintAndPos[i][1] == 0
			local prevPassenger = coordI2varaintAndPos[i-1][1] == 0
			local pos = coordI2varaintAndPos[i][2] - ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize + magicNumber) * 0.5
			local pos9 = coordI2varaintAndPos[i][2] - ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize - magicNumber) * 0.5
			local posl = coordI2varaintAndPos[i][2] - ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize) * 0.5
			
			local hasNext = range0[i+1] ~= 1 or range1[i+1] ~= -1 or needOuterRight
			
			-- vertical links
			for j = range0[i-1], range0[i] - 1 do
				addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.transl(vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_btm")	
			end
			
			-- loops
			result.h0[i] = math.min(range0[i], range0[i+1]) - 1
			if range0[i-1] > range0[i+1] and range0[i] > range0[i+1] then -- loop down
				local high = math.min(range0[i-1], range0[i])
				local low = math.min(range0[i], range0[i+1])
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_r" .. cat .. ".mdl", transf.transl(vec3.new(pos + 25, (high + 0) * platformLength - 20, .0)), "curve_" .. i .. "_top")
				addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos9, (low - 1) * platformLength, .0)), "curve_" .. i .. "_top")
				for j = high - 2, low, -1 do
					addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_btm")	
				end
			elseif range0[i-1] < range0[i] and range0[i-1] < range0[i+1] and hasNext then -- entrance from bottom
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_l" .. cat .. ".mdl", transf.transl(vec3.new(pos9 - 25, (math.min(range0[i], range0[i+1]) - 1) * platformLength - 10, .0)), "curve_" .. i .. "_btm")
			elseif hasNext then -- enter from side, no loop
				addModel("station/road/streetstation/" .. erastr .. "path_btm_str" .. cat .. ".mdl", transf.transl(vec3.new(pos + 10, (math.min(range0[i], range0[i+1]) - 1) * platformLength, .0)), "link_" .. i .. "_btm")
			end
			if not prevPassenger then
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_btm" .. cat .. ".mdl", transf.transl(vec3.new(pos + 7.5, (math.min(range0[i-1], range0[i]) - 1) * platformLength, .0)), "cargo_ext_" .. i .. "_btm")
			end
			-- platform entrance
			addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.transl(vec3.new(pos, (math.min(range0[i-1], range0[i]) - 1) * platformLength, .0)), "curve_" .. i .. "_btm")
			
			-- Right top curves
			result.h1[i] = math.max(range1[i], range1[i+1]) + 1
			if range1[i-1] < range1[i+1] and range1[i] < range1[i+1] then -- loop down
				local low = math.max(range1[i-1], range1[i])
				local high = math.max(range1[i], range1[i+1])
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_l" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos + 25, (low + 2) * platformLength, .0)), "curve_" .. i .. "_top")
				addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos9, (high + 1) * platformLength, .0)), "curve_" .. i .. "_top")
				for j = low + 2, high do
					addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_top")	
				end
			elseif range1[i-1] > range1[i] and range1[i-1] > range1[i+1] and hasNext then -- exit from bottom
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_r" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos9 - 25, (math.max(range1[i], range1[i+1]) + 0) * platformLength + 20, .0)), "curve_" .. i .. "_btm")
			elseif hasNext then -- enter from side, no loop
				addModel("station/road/streetstation/" .. erastr .. "path_top_str" .. cat .. ".mdl", transf.transl(vec3.new(pos + 10, (math.max(range1[i], range1[i+1]) + 1) * platformLength, .0)), "link_" .. i .. "_top")
			end
			if not prevPassenger then
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_top" .. cat .. ".mdl", transf.transl(vec3.new(pos + 7.5, (math.max(range1[i-1], range1[i]) + 1) * platformLength, .0)), "cargo_ext_" .. i .. "_top")
			end
			-- platform exit
			addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.transl(vec3.new(pos, (math.max(range1[i-1], range1[i]) + 1) * platformLength, .0)), "curve_" .. i .. "_top")
			for j = range1[i] + 1, math.max(range1[i-1], range1[i]) do -- uplink
				addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.transl(vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_top")	
			end
		end
		-- Left extern
		for i = -2, leftLen, -1 do
			-- Right bottom curves
			local magicNumber = 35
			local thisPassenger = coordI2varaintAndPos[i][1] == 0
			local prevPassenger = coordI2varaintAndPos[i+1][1] == 0
			local pos = coordI2varaintAndPos[i][2] + ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize + magicNumber) * 0.5
			local pos9 = coordI2varaintAndPos[i][2] + ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize - magicNumber) * 0.5
			local posl = coordI2varaintAndPos[i][2] + ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize) * 0.5
			
			local hasPrev = range0[i-1] ~= 1 or range1[i-1] ~= -1 or needOuterLeft
			
			-- vertical links
			for j = range1[i] + 1, range1[i+1] do
				addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_btm")	
			end
			
			-- loops
			result.h1[i] = math.max(range1[i], range1[i-1]) + 1
			if range1[i-1] > range1[i+1] and range1[i] < range1[i-1] then -- loop up
				local high = math.max(range1[i-1], range1[i])
				local low = math.max(range1[i], range1[i+1])
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_r" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos - 25, (low + 0) * platformLength + 20, .0)), "curve_" .. i .. "_top")
				addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.transl(vec3.new(pos9, (high + 1) * platformLength, .0)), "curve_" .. i .. "_top")
				for j = low + 2, high do
					addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.transl(vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_btm")	
				end
			elseif range1[i+1] > range1[i] and range1[i+1] > range1[i-1] and hasPrev then -- entrance from top
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_l" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos9 + 25, (math.max(range1[i], range1[i-1]) + 2) * platformLength, .0)), "curve_" .. i .. "_btm")
			elseif hasPrev then -- enter from right side, no loop
				addModel("station/road/streetstation/" .. erastr .. "path_btm_str" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos - 10, (math.max(range1[i], range1[i-1]) + 1) * platformLength, .0)), "link_" .. i .. "_btm")
			end
			if not prevPassenger then
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_btm" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, (math.max(range1[i+1], range1[i]) + 1) * platformLength, .0)), "cargo_ext_" .. i .. "_btm")
			end
			-- platorm entrance
			addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos, (math.max(range1[i+1], range1[i]) + 1) * platformLength, .0)), "curve_" .. i .. "_btm")
			
			-- -- Left bottom curves
			result.h0[i] = math.min(range0[i], range0[i+1]) - 1
			if range0[i+1] > range0[i-1] and range0[i] > range0[i-1] then -- loop down
				local low = math.min(range0[i+1], range0[i])
				local high = math.min(range0[i], range0[i-1])
				addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.transl(vec3.new(pos9, (high - 1) * platformLength, .0)), "curve_" .. i .. "_top")
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_l" .. cat .. ".mdl", transf.transl(vec3.new(pos - 25, (low - 2) * platformLength, .0)), "curve_" .. i .. "_top")
				for j = high, low - 2 do
					addModel("station/road/streetstation/" .. erastr .. "path_nostop" .. cat .. ".mdl", transf.transl(vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_top")	
				end
			elseif range0[i+1] < range0[i] and range0[i+1] < range0[i-1] and hasPrev then -- exit from bottom
				addModel("station/road/streetstation/" .. erastr .. "cntr_con_r" .. cat .. ".mdl", transf.transl(vec3.new(pos9 + 25, (math.min(range0[i], range0[i-1]) + 0) * platformLength - 20, .0)), "curve_" .. i .. "_btm")
			elseif hasPrev then -- enter from side, no loop
				addModel("station/road/streetstation/" .. erastr .. "path_top_str" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos - 10, (math.min(range0[i], range0[i-1]) - 1) * platformLength, .0)), "link_" .. i .. "_top")
			end
			if not prevPassenger then
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_btm" .. cat .. ".mdl", transf.transl(vec3.new(pos - 12.5, (math.min(range0[i+1], range0[i]) - 1) * platformLength, .0)), "cargo_ext_" .. i .. "_top")
			end
			-- platform exit
			addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos, (math.min(range0[i+1], range0[i]) - 1) * platformLength, .0)), "curve_" .. i .. "_top")
			for j = math.min(range0[i+1], range0[i]), range0[i] - 1 do -- uplink
				addModel("station/road/streetstation/" .. erastr .. "path_out_rep" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(posl, j * platformLength, .0)), "link_" .. i .. "_" .. j .. "_top")	
			end
		end
		
		local has_right = not no_right
		local has_left = not no_left
		--local needOuterRight = needOuterRight and (has_right or entrance_bottom or entrance_top or exit_bottom or exit_top)
		--local needOuterLeft = needOuterLeft and (has_left or entrance_bottom or entrance_top or exit_bottom or exit_top)
		local needOuterRight = needOuterRight and has_right
		local needOuterLeft = needOuterLeft and has_left
		
		-- Extend if need outer
		if needOuterLeft and coordI2varaintAndPos[leftLen] ~= nil then
			local thisPassenger = coordI2varaintAndPos[leftLen][1] == 0
			local pos = coordI2varaintAndPos[leftLen][2] - ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize) * 0.5
			for j = range0[leftLen], range1[leftLen] do
				addModel("station/road/streetstation/" .. erastr .. "path_out_rep" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos, j * platformLength, .0)), "outer_link_l_" .. j)	
			end
			
			addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos + 17.5, (range0[leftLen] - 1) * platformLength, .0)), "outer_link_rightc_l")
			addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos + 17.5, (range1[leftLen] + 1) * platformLength, .0)), "outer_link_leftc_l")
			if not thisPassenger then
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_top" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos + 10, (range0[leftLen] - 1) * platformLength, .0)), "outer_link_ext_l_btm")
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_btm" .. cat .. ".mdl", transf.rotZTransl(math.pi, vec3.new(pos + 10, (range1[leftLen] + 1) * platformLength, .0)), "outer_link_ext_l_top")
			end
		end
		if needOuterRight and coordI2varaintAndPos[rightLen] ~= nil then 
			local thisPassenger = coordI2varaintAndPos[rightLen][1] == 0
			local pos = coordI2varaintAndPos[rightLen][2] + ((thisPassenger and passengerPlatformSize or cargoPlatformSize) + trackSize) * 0.5
			for j = range0[rightLen], range1[rightLen] do
				addModel("station/road/streetstation/" .. erastr .. "path_out_rep" .. cat .. ".mdl", transf.transl(vec3.new(pos, j * platformLength, .0)), "outer_link_r_" .. j)	
			end
			
			addModel("station/road/streetstation/" .. erastr .. "path_btm" .. cat .. ".mdl", transf.transl(vec3.new(pos - 17.5, (range0[rightLen] - 1) * platformLength, .0)), "outer_link_rightc_r")
			addModel("station/road/streetstation/" .. erastr .. "path_top" .. cat .. ".mdl", transf.transl(vec3.new(pos - 17.5, (range1[rightLen] + 1) * platformLength, .0)), "outer_link_leftc_r")
			if not thisPassenger then
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_btm" .. cat .. ".mdl", transf.transl(vec3.new(pos - 10, (range0[rightLen] - 1) * platformLength, .0)), "outer_link_ext_r_btm")
				addModel("station/road/streetstation/" .. erastr .. "cargo_path_ext_top" .. cat .. ".mdl", transf.transl(vec3.new(pos - 10, (range1[rightLen] + 1) * platformLength, .0)), "outer_link_ext_r_top")
			end
		end
	
		-- Make person links
		-- Center
		if (has_left or entrance_bottom or entrance_top or exit_bottom or exit_top) and (has_right or entrance_bottom or entrance_top or exit_bottom or exit_top) then
			local centerh = math.min(math.min(range0[-2] or 1, range0[-1] or 1), math.min(range0[0] or 1, range0[1] or 1)) - 1
			if entrance_bottom and exit_bottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.transl(vec3.new(-5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.transl(vec3.new(0, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.transl(vec3.new(5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
			elseif entrance_bottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(-5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(0, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
			elseif exit_bottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(-5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(0, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
			else 
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(-5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(0, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(5, centerh * platformLength - 2.5, .0)), "pedestrian_lower")
			end
			local centerh = math.max(math.max(range1[-2] or -1, range1[-1] or -1), math.max(range1[0] or -1, range1[1] or -1)) + 1
			if entrance_top and exit_top then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.rotZTransl(math.pi, vec3.new(-5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi, vec3.new(0, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
			elseif entrance_top then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(-5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(0, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
			elseif exit_top then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(-5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(0, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
			else 
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(-5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(0, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(5, centerh * platformLength + 2.5, .0)), "pedestrian_lower")
			end
		end
		
		for i = 0, rightLen do
			-- lower
			local cargo = coordI2varaintAndPos[i][1]
			local pos = coordI2varaintAndPos[i][2] + (cargo == 1 and 2.5 or 0)
			local h1p = (math.min(range0[i-1] or 1, range0[i]) - 1)
			local h1 = (math.min(range0[i], range0[i+1] or 1) - 1) 
			local h1n = (math.min(range0[i+1] or 1, range0[i+2] or 1) - 1)
			if i == 0 then
				h1p = math.min(math.min(range0[0], range0[1] or 1), math.min(range0[-2] or 1, range0[-1])) - 1
			end
			
			local entrance_bottomp = params.modules[result.MangleId({i > 0 and i-1 or 55, 0, 4})] ~= nil
			local exit_bottomp = params.modules[result.MangleId({i > 0 and i-1 or 55, 0, 5})] ~= nil
			local entrance_exit_bottomp = params.modules[result.MangleId({i > 0 and i-1 or 55, 0, 3})] ~= nil
			local entrance_bottom = params.modules[result.MangleId({i, 0, 4})] ~= nil
			local exit_bottom = params.modules[result.MangleId({i, 0, 5})] ~= nil
			local entrance_exit_bottom = params.modules[result.MangleId({i, 0, 3})] ~= nil
			local entrance_bottomr = params.modules[result.MangleId({i+1, 0, 4})] ~= nil
			local exit_bottomr = params.modules[result.MangleId({i+1, 0, 5})] ~= nil
			local entrance_exit_bottomr = params.modules[result.MangleId({i+1, 0, 3})] ~= nil
			
			local entrance_topp = params.modules[result.MangleId({i > 0 and i-1 or 55, 1, 4})] ~= nil
			local exit_topp = params.modules[result.MangleId({i > 0 and i-1 or 55, 1, 5})] ~= nil
			local entrance_exit_topp = params.modules[result.MangleId({i > 0 and i-1 or 55, 1, 3})] ~= nil
			local entrance_top = params.modules[result.MangleId({i, 1, 4})] ~= nil
			local exit_top = params.modules[result.MangleId({i, 1, 5})] ~= nil
			local entrance_exit_top = params.modules[result.MangleId({i, 1, 3})] ~= nil
			local entrance_topr = params.modules[result.MangleId({i+1, 1, 4})] ~= nil
			local exit_topr = params.modules[result.MangleId({i+1, 1, 5})] ~= nil
			local entrance_exit_topr = params.modules[result.MangleId({i+1, 1, 3})] ~= nil
			
			if cargo == 1 and h1p >= h1 then
				if i == 0 and entrance_bottomp then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_bottomp then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_bottomp and i > 0 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if cargo == 1 or h1p >= h1 then
				if entrance_exit_bottomp and cargo ~= 1 and i > 0 then
					if i == rightLen and not needOuterRight then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif entrance_bottomp and cargo ~= 1 and i > 0 then
					if i == rightLen and not needOuterRight then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_l.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif exit_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterRight and i == rightLen and cargo == 1 then -- special end (cargo uses end_l)
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_r.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterRight and i == rightLen and cargo == 0 then -- special end (cargo uses end_l)
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h1n >= h1 then
				if entrance_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif i ~= rightLen or needOuterRight then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			-- link up
			local offs = cargo == 1 and 5 or 0
			for j = h1p, h1 - 1 do
				if j == h1p then
					if (entrance_bottomp or entrance_exit_bottomp) and i > 0 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.transl(vec3.new(pos - 2.5 - offs, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else 
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.transl(vec3.new(pos - 2.5 - offs, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 5 - 2.5, .0)), "pedestrian_lower_" ..i)
			end
			if h1p <= h1 - 1  then
				if not needOuterRight and i == rightLen and cargo == 0 then -- special end
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.transl(vec3.new(pos - 2.5 - offs, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			-- link down
			for j = h1 - 1, h1n, -1 do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 5 - 2.5, .0)), "pedestrian_lower_" ..i)
				if j == h1n then
					if entrance_bottom then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else 
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h1 - 1 >= h1n then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
			end
			
			-- upper
			local h2p = (math.max(range1[i-1] or -1, range1[i]) + 1)
			local h2 = (math.max(range1[i], range1[i+1] or -1) + 1)
			local h2n = (math.max(range1[i+1] or -1, range1[i+2] or -1) + 1)
			if i == 0 then
				h2p = math.max(math.max(range1[0], range1[1] or -1), math.max(range1[-2] or -1, range1[-1])) + 1
			end
			
			if cargo == 1 and h2p <= h2 then
				if entrance_exit_topp and i == 0 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_topp then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_topp and i > 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if cargo == 1 or h2p <= h2 then
				if entrance_top then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_topp and cargo ~= 1 and i > 0 then
					if i == rightLen and not needOuterRight then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif entrance_exit_top then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_topp and cargo ~= 1 and i > 0 then
					if i == rightLen and not needOuterRight then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif not needOuterRight and i == rightLen and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_l.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterRight and i == rightLen and cargo == 0 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h2n <= h2 then
				if entrance_top then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_top then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_top then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif i ~= rightLen or needOuterRight then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			
			
			-- link up
			local offs = cargo == 1 and 5 or 0
			for j = h2 + 1, h2p do
				if j == h2p then
					if (exit_topp or entrance_exit_topp) and i ~= 0 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else 
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength - 5 + 2.5, .0)), "pedestrian_lower_" ..i)
			end
			if  h2 + 1 <= h2p  then
				if not needOuterRight and i == rightLen and cargo == 0 then -- special end
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			-- link down
			for j = h2 + 1, h2n do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 5 + 2.5, .0)), "pedestrian_lower_" ..i)
				if j == h2n then
					if exit_top then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else 
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h2 + 1 <= h2n then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
			end
			
			-- Mini links
			if needOuterRight or i ~= rightLen then -- special end
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "link_l.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "link")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "link_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos, h2 * platformLength + 2.5, .0)), "link")
			end
			
			-- Continuations
			for j = h1, range0[i] - 2 do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, j * platformLength + 7.5, .0)), "pedestrian_lower_" ..i)
			end
			for j = h2 - 1, range1[i] + 1, -1 do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5, j * platformLength + 7.5, .0)), "pedestrian_lower_" ..i)
			end
		end
		for i = -1, leftLen, -1 do
			-- lower
			local cargo = coordI2varaintAndPos[i][1]
			local pos = coordI2varaintAndPos[i][2] + (cargo == 1 and 2.5 or 0)
			local h1n = (math.min(range0[i+1] or 1, range0[i]) - 1)
			local h1 = (math.min(range0[i], range0[i-1] or 1) - 1)
			local h1p = (math.min(range0[i-1] or 1, range0[i-2] or 1) - 1)
			if i == -1 then
				h1n = math.min(math.min(range0[0], range0[1] or 1), math.min(range0[-2] or 1, range0[-1])) - 1
			end
			
			local entrance_bottomp = params.modules[result.MangleId({i-1, 0, 4})] ~= nil
			local exit_bottomp = params.modules[result.MangleId({i-1, 0, 5})] ~= nil
			local entrance_exit_bottomp = params.modules[result.MangleId({i-1, 0, 3})] ~= nil
			local entrance_bottom = params.modules[result.MangleId({i, 0, 4})] ~= nil
			local exit_bottom = params.modules[result.MangleId({i, 0, 5})] ~= nil
			local entrance_exit_bottom = params.modules[result.MangleId({i, 0, 3})] ~= nil
			local entrance_bottomr = params.modules[result.MangleId({i < -1 and i+1 or 55, 0, 4})] ~= nil
			local exit_bottomr = params.modules[result.MangleId({i < -1 and i+1 or 55, 0, 5})] ~= nil
			local entrance_exit_bottomr = params.modules[result.MangleId({i < -1 and i+1 or 55, 0, 3})] ~= nil
			
			local entrance_topp = params.modules[result.MangleId({i-1, 1, 4})] ~= nil
			local exit_topp = params.modules[result.MangleId({i-1, 1, 5})] ~= nil
			local entrance_exit_topp = params.modules[result.MangleId({i-1, 1, 3})] ~= nil
			local entrance_top = params.modules[result.MangleId({i, 1, 4})] ~= nil
			local exit_top = params.modules[result.MangleId({i, 1, 5})] ~= nil
			local entrance_exit_top = params.modules[result.MangleId({i, 1, 3})] ~= nil
			local entrance_topr = params.modules[result.MangleId({i < -1 and i+1 or 55, 1, 4})] ~= nil
			local exit_topr = params.modules[result.MangleId({i < -1 and i+1 or 55, 1, 5})] ~= nil
			local entrance_exit_topr = params.modules[result.MangleId({i < -1 and i+1 or 55, 1, 3})] ~= nil
			
			
			if cargo == 1 and h1p >= h1 then
				if entrance_exit_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_bottom then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif (i ~= leftLen or needOuterLeft) then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos - 7.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if cargo == 1 or h1p >= h1 then
				if entrance_exit_bottom and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif  entrance_exit_bottom and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_bottom and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_bottom and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_bottom and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterLeft and i == leftLen and cargo == 1 then -- special end (cargo uses end_l)
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_l.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif cargo == 1 or (i ~= leftLen or needOuterLeft) then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos - 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h1n >= h1 then
				if entrance_exit_bottomr and i < -1 then
					if i == leftLen and not needOuterLeft and cargo ~= 1 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl",  transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif entrance_exit_bottom and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif  exit_bottomr and i < -1 then
					if i == leftLen and not needOuterLeft and cargo ~= 1 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif entrance_bottom and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterLeft and i == leftLen and cargo == 0 then -- special end (cargo uses end_l)
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.transl(vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			
			-- link up
			local offs = cargo == 1 and 5 or 0
			for j = h1p, h1 - 1 do
				if j == h1p then
					if exit_bottom then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.transl(vec3.new(pos - 2.5 - offs, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.transl(vec3.new(pos - 2.5 - offs, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 5 - 2.5, .0)), "pedestrian_lower_" ..i)
			end
			if h1p <= h1 - 1  then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.transl(vec3.new(pos - 2.5 - offs, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
			end
			-- link down
			for j = h1 - 1, h1n, -1 do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 5 - 2.5, .0)), "pedestrian_lower_" ..i)
				if j == h1n then
					if (exit_bottomr or entrance_exit_bottomr) and i ~= -1 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h1 - 1 >= h1n then
				if not needOuterLeft and i == leftLen and cargo == 0 then -- special end
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h1 * platformLength - 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			
			-- upper
			local h2n = (math.max(range1[i+1] or -1, range1[i]) + 1)
			local h2 = (math.max(range1[i], range1[i-1] or -1) + 1)
			local h2p = (math.max(range1[i-1] or -1, range1[i-2] or -1) + 1)
			if i == -1 then
				h2n = math.max(math.max(range1[0], range1[1] or -1), math.max(range1[-2] or -1, range1[-1])) + 1
			end
			
			if cargo == 1 and h2p <= h2 then
				if exit_top and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_top and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_top then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif (i ~= leftLen or needOuterLeft) then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if cargo == 1 or h2p <= h2 then
				if entrance_exit_top and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_top and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_top and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_top and cargo == 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif exit_top and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterLeft and i == leftLen and cargo == 1 then -- special end (cargo uses end_l)
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif cargo == 1 or (i ~= leftLen or needOuterLeft) then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h2n <= h2 then
				if entrance_exit_top and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif entrance_exit_topr and i < -1 then
					if i == leftLen and not needOuterLeft and cargo ~= 1 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif entrance_topr and i < -1 then
					if i == leftLen and not needOuterLeft and cargo ~= 1 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				elseif exit_top and cargo ~= 1 then
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				elseif not needOuterLeft and i == leftLen and cargo == 0 then -- special end (cargo uses end_l)
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			
			-- link up
			local offs = cargo == 1 and 5 or 0
			for j = h2 + 1, h2p do
				if j == h2p then
					if entrance_top then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, j * platformLength - 5 + 2.5, .0)), "pedestrian_lower_" ..i)
			end
			if  h2 + 1 <= h2p then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos - 2.5 - offs, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
			end
			-- link down
			for j = h2 + 1, h2n do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength - 5 + 2.5, .0)), "pedestrian_lower_" ..i)
				if j == h2n then
					if (entrance_topr or entrance_exit_topr) and i < -1 then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
					end
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			if h2 + 1 <= h2n then
				if not needOuterLeft and i == leftLen and cargo == 0 then -- special end
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				else
					addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_out.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				end
			end
			
			local pos = coordI2varaintAndPos[i][2] - (cargo == 1 and 2.5 or 0)
			-- Mini links
			if needOuterLeft or i ~= leftLen then -- special end
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "link_r.mdl", transf.transl(vec3.new(pos, h1 * platformLength - 2.5, .0)), "link")
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "link_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos + 2.5, h2 * platformLength + 2.5, .0)), "link")
			end
			
			-- Continuations
			for j = h1, range0[i] - 2 do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 7.5, .0)), "pedestrian_lower_" ..i)
			end
			for j = h2 - 1, range1[i] + 1, -1 do
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 2.5, .0)), "pedestrian_lower_" ..i)
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos + 2.5, j * platformLength + 7.5, .0)), "pedestrian_lower_" ..i)
			end
		end
		if needOuterRight then
			local cargo = coordI2varaintAndPos[rightLen][1]
			local pos = coordI2varaintAndPos[rightLen][2] + (cargo == 1 and 2.5 or 0)
			for j = range0[rightLen] - 1, range1[rightLen] do
				for k = 0,1 do
					local entrance_bottom = params.modules[result.MangleId({rightLen + 1, 2*j - 1 + k + 2, 7})] ~= nil
					local entrance_exit_bottom = params.modules[result.MangleId({rightLen + 1, 2*j - 1 + k + 2, 6})] ~= nil
					local entrance_middle = params.modules[result.MangleId({rightLen + 1, 2*j + k + 2, 7})] ~= nil
					local exit_middle = params.modules[result.MangleId({rightLen + 1, 2*j + k + 2, 8})] ~= nil
					local entrance_exit_middle = params.modules[result.MangleId({rightLen + 1, 2*j + k + 2, 6})] ~= nil
					local exit_top = params.modules[result.MangleId({rightLen + 1, 2*j+ 1 + k + 2, 8})] ~= nil
					local entrance_exit_top = params.modules[result.MangleId({rightLen + 1, 2*j + 1 + k + 2, 6})] ~= nil
				
					if entrance_exit_bottom then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_exit_middle then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_exit_top then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_bottom then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_middle then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif exit_middle then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif exit_top then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					end
				end
			end
			
			local exitBottom = params.modules[result.MangleId({rightLen + 1, 2*range0[rightLen], 8})]
			local entranceExitBottom = params.modules[result.MangleId({rightLen + 1, 2*range0[rightLen], 6})]
			
			local entranceTop = params.modules[result.MangleId({rightLen + 1, 2*range1[rightLen] + 3, 7})]
			local entranceExitTop = params.modules[result.MangleId({rightLen + 1, 2*range1[rightLen] + 3, 6})]
			
			if lrs then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(0, vec3.new(pos + 7.5, (range0[rightLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			elseif exitBottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_r.mdl", transf.rotZTransl(0, vec3.new(pos + 7.5, (range0[rightLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			elseif entranceExitBottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(0, vec3.new(pos + 7.5, (range0[rightLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			else 
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(0, vec3.new(pos + 7.5, (range0[rightLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			end
			if trs then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, (range1[rightLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			elseif entranceTop then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_l.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, (range1[rightLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			elseif entranceExitTop then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, (range1[rightLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			else 
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2, vec3.new(pos + 7.5, (range1[rightLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			end
		end
		if needOuterLeft then
			local cargo = coordI2varaintAndPos[leftLen][1]
			local pos = coordI2varaintAndPos[leftLen][2] - (cargo == 1 and 2.5 or 0)
			for j = range0[leftLen] - 1, range1[leftLen] do
			
				for k = 0,1 do
					local entrance_exit_bottom = params.modules[result.MangleId({leftLen - 1, 2*j - 1 + k + 2, 6})] ~= nil
					local entrance_exit_middle = params.modules[result.MangleId({leftLen - 1, 2*j + k + 2, 6})] ~= nil
					local entrance_exit_top = params.modules[result.MangleId({leftLen - 1, 2*j + 1 + k + 2, 6})] ~= nil
					
					local entrance_bottom = params.modules[result.MangleId({leftLen - 1, 2*j + k + 2, 7})] ~= nil
					local entrance_middle = params.modules[result.MangleId({leftLen - 1, 2*j + 1 + k + 2, 7})] ~= nil
					
					local exit_middle = params.modules[result.MangleId({leftLen - 1, 2*j - 1 + k + 2, 8})] ~= nil
					local exit_top = params.modules[result.MangleId({leftLen - 1, 2*j + k + 2, 8})] ~= nil
				
					if entrance_exit_bottom then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_l.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_exit_middle then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_low.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_exit_top then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_bottom then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif entrance_middle then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif exit_middle then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_l.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					elseif exit_top then
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight_spcl2_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					else
						addModel("station/road/streetstation/pedestrian_" .. erastr .. "straight.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, j * platformLength + 5*k + 2.5, .0)), "pedestrian_lower")
					end
				end
			end
			
			local entranceBottom = params.modules[result.MangleId({leftLen - 1, 2*range0[leftLen], 7})]
			local entranceExitBottom = params.modules[result.MangleId({leftLen - 1, 2*range0[leftLen], 6})]
			
			local exitTop = params.modules[result.MangleId({leftLen - 1, 2*range1[leftLen] + 3, 8})]
			local entranceExitTop = params.modules[result.MangleId({leftLen - 1, 2*range1[leftLen] + 3, 6})]
			
			if lls then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, (range0[leftLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			elseif entranceBottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_l.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, (range0[leftLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			elseif entranceExitBottom then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, (range0[leftLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			else 
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi / 2 * 3, vec3.new(pos - 7.5, (range0[leftLen] - 2) * platformLength + 5 + 2.5, .0)), "pedestrian_lower")
			end
			if tls then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_l.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, (range1[leftLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			elseif exitTop then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "end_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, (range1[leftLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			elseif entranceExitTop then
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in_spcl_r.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, (range1[leftLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			else 
				addModel("station/road/streetstation/pedestrian_" .. erastr .. "corner_in.mdl", transf.rotZTransl(math.pi, vec3.new(pos - 7.5, (range1[leftLen]) * platformLength + 10 + 2.5, .0)), "pedestrian_lower")
			end
		end
		
		local height0 = {}
		local height1 = {}
		for i = 0, rightLen do
			height0[i] = math.min(range0[i], range0[i+1] or 1)
			height1[i] = math.max(range1[i], range1[i+1] or -1) 
			if i == 0 then
				height0[i] = math.min(math.min(range0[0], range0[1] or 1), math.min(range0[-2] or 1, range0[-1]))
				height1[i] = math.max(math.max(range1[0], range1[1] or -1), math.max(range1[-2] or -1, range1[-1]))
			end
		end
		for i = leftLen, -1 do
			height0[i] = math.min(range0[i], range0[i-1] or 1)
			height1[i] = math.max(range1[i], range1[i-1] or -1) 
			if i == -1 then
				height0[i] = math.min(math.min(range0[0], range0[1] or 1), math.min(range0[-2] or 1, range0[-1]))
				height1[i] = math.max(math.max(range1[0], range1[1] or -1), math.max(range1[-2] or -1, range1[-1]))
			end
		end
		
		local spacing = {8, 8, 20, 4}
		local spacingEn = {2, 7, 20, 4}
		local spacingEx = {7, 2, 20, 4}
		local function AddHorSlots(coordI, pos, ofs, minPos, maxPos, addBottomEntrance, addBottomExit, addBottom2Way, addTopEntrance, addTopExit, addTop2Way, h)  
			if minPos then
				if addBottom2Way then
					table.insert(result.slots, {
						id = result.MangleId({coordI, 0, 3}),
						transf = transf.transl(vec3.new(pos + ofs, minPos * platformLength - h, .0)),
						type = "street_terminal_entrance_exit",
						spacing = spacing
					})
				end
				if addBottomEntrance then
					table.insert(result.slots, {
						id = result.MangleId({coordI, 0, 4}),
						transf = transf.transl(vec3.new(pos + ofs, minPos * platformLength - h, .0)),
						type = "street_terminal_entrance",
						spacing = spacingEn
					})
				end
				if addBottomExit then
					table.insert(result.slots, {
						id = result.MangleId({coordI, 0, 5}),
						transf = transf.transl(vec3.new(pos + ofs, minPos * platformLength - h, .0)),
						type = "street_terminal_exit",
						spacing = spacingEx
					})
				end
			end
			if maxPos then
				if addTop2Way then
					table.insert(result.slots, {
						id = result.MangleId({coordI, 1, 3}),
						transf = transf.rotZTransl(math.pi, vec3.new(pos + ofs, maxPos * platformLength + h, .0)),
						type = "street_terminal_entrance_exit",
						spacing = spacing
					})
				end
				if addTopEntrance then
					table.insert(result.slots, {
						id = result.MangleId({coordI, 1, 4}),
						transf = transf.rotZTransl(math.pi, vec3.new(pos + ofs, maxPos * platformLength + h, .0)),
						type = "street_terminal_entrance",
						spacing = spacingEn
					})
				end
				if addTopExit then
					table.insert(result.slots, {
						id = result.MangleId({coordI, 1, 5}),
						transf = transf.rotZTransl(math.pi, vec3.new(pos + ofs, maxPos * platformLength + h, .0)),
						type = "street_terminal_exit",
						spacing = spacingEx
					})
				end
			end
		end
		AddHorSlots(55, 0.0, 0.0, 
			math.min(math.min(range0[-1], range0[0]), math.min(leftLen < 0 and range0[-2] or 0, rightLen > 0 and range0[1] or 0)), 
			math.max(math.max(range1[-1], range1[0]), math.max(leftLen < 0 and range1[-2] or 0, rightLen > 0 and range1[1] or 0)), true, true, true, true, true, true, 15)

		-- Top bottom entrances
		for coordI = leftLen, rightLen do
			if coordI >= 0 then
				local offs = coordI2varaintAndPos[coordI][1] == 0 and 2.5 or 5
				local minPos = math.min(height0[coordI], height0[coordI+1] or 1)
				local maxPos = math.max(height1[coordI], height1[coordI+1] or -1)
				
				local topSame = height1[coordI] >= (height1[coordI-1] or -1) and height1[coordI] >= (height1[coordI+1] or -1)
				local bottomSame = height0[coordI] <= (height0[coordI-1] or 1) and height0[coordI] <= (height0[coordI+1] or 1)
				
				local validt = true
				local validb = true
				if coordI == 0 then
					validb = height0[coordI] == math.min(range0[coordI], range0[coordI+1] or 1)
					validt = height1[coordI] == math.max(range1[coordI], range1[coordI+1] or -1)
				end
				AddHorSlots(coordI, coordI2varaintAndPos[coordI][2], offs, minPos, maxPos, true and validb, bottomSame and validb, bottomSame and validb, topSame and validt, true and validt, topSame and validt, 15)
			else 
				local offs = coordI2varaintAndPos[coordI][1] == 0 and -2.5 or -5
				local minPos = math.min(height0[coordI], height0[coordI-1] or 1)
				local maxPos = math.max(height1[coordI], height1[coordI-1] or -1)
				
				local topSame = height1[coordI] >= (height1[coordI-1] or -1) and height1[coordI] >= (height1[coordI+1] or -1)
				local bottomSame = height0[coordI] <= (height0[coordI-1] or 1) and height0[coordI] <= (height0[coordI+1] or 1)
				
				local validt = true
				local validb = true
				if coordI == -1 then
					validb = height0[coordI] == math.min(range0[coordI], range0[coordI-1] or -1)
					validt = height1[coordI] == math.max(range1[coordI], range1[coordI-1] or 1)
				end
				AddHorSlots(coordI, coordI2varaintAndPos[coordI][2], offs, minPos, maxPos, bottomSame and validb, true and validb, bottomSame and validb, true and validt, topSame and validt, topSame and validt, 15)
			end
		end
		
		-- Fill in missing tns
		for coordI = leftLen, rightLen do
			local pos =  coordI2varaintAndPos[coordI][2]
			for coordJ = result.heightAt0[coordI] - 1, range0[coordI] - 2  do
				addModel("station/road/streetstation/" .. erastr .. "pltfrm_ext_rep.mdl", transf.transl(vec3.new(pos, coordJ * platformLength + 2.5, .0)), "lext" .. coordJ)
			end
			for coordJ = range1[coordI] + 2, result.heightAt1[coordI] + 1 do
				addModel("station/road/streetstation/" .. erastr .. "pltfrm_ext_rep.mdl", transf.transl(vec3.new(pos, coordJ * platformLength - 2.5, .0)), "text" .. coordJ)
			end
		end
		
		local function AddVertSlots(coordI, j, j2, pos, ofs, h, s, noAddEntrance, noAddExit)
			--if not noAddEntrance and not noAddExit then
				table.insert(result.slots, {
					id = result.MangleId({coordI, j, 6}),
					transf = transf.rotZTransl(s * math.pi / 2, vec3.new(pos + ofs, j2 * platformLength + h, .0)),
					type = "street_terminal_entrance_exit",
					spacing = spacing
				})
			--end
			--if not noAddEntrance then
			table.insert(result.slots, {
				id = result.MangleId({coordI, j, 7}),
				transf = transf.rotZTransl(s * math.pi / 2, vec3.new(pos + ofs, j2 * platformLength + h, .0)),
				type = "street_terminal_entrance",
				spacing = spacingEn
			})
			--end
			--if not noAddExit then
			table.insert(result.slots, {
				id = result.MangleId({coordI, j, 8}),
				transf = transf.rotZTransl(s * math.pi / 2, vec3.new(pos + ofs, j2 * platformLength + h, .0)),
				type = "street_terminal_exit",
				spacing = spacingEx
			})
			--end
		end
		if rightLen >= 0 then
			for j = range0[rightLen], range1[rightLen] + 1 do
				local pos = coordI2varaintAndPos[rightLen][2]
				local h = -7.5
				local thisPassenger = coordI2varaintAndPos[rightLen][1] == 0
				local ofs = thisPassenger and 10 or 12.5
				AddVertSlots(rightLen + 1, 2 * j, j, pos, ofs, h, 1, j == range0[rightLen], false)  
				AddVertSlots(rightLen + 1, 2 * j + 1, j, pos, ofs, h + 5, 1, false, j == range1[rightLen] + 1)  
			end
		end
		if leftLen <= -1 then
			for j = range0[leftLen], range1[leftLen] + 1 do
				local pos = coordI2varaintAndPos[leftLen][2]
				local h = -7.5
				local thisPassenger = coordI2varaintAndPos[leftLen][1] == 0
				local ofs = thisPassenger and -10 or -12.5
				AddVertSlots(leftLen - 1, 2 * j, j, pos, ofs, h, -1, j == range0[leftLen], false)  
				AddVertSlots(leftLen - 1, 2 * j + 1, j, pos, ofs, h + 5, -1, false, j == range1[leftLen] + 1)  
			end
		end
		
		result.terminalGroups = {}
		result.stations = {}
		
		result.MakeEntrance = function(addModelFn, coordI, coordJ, variant, makeExit, makeEntrance) 
			if variant >= 6 then -- side
				if makeExit then -- Exit
					if coordI >= 0 and 2 * result.range0[coordI - 1] == coordJ or coordI < 0 and 2 * (result.range1[coordI + 1] + 1) + 1 == coordJ then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					elseif coordI >= 0 and 2 * result.range0[coordI - 1] + 1 == coordJ or coordI < 0 and 2 * (result.range1[coordI + 1] + 1) == coordJ then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					else
						addModelFn("station/road/streetstation/" .. erastr .. "entr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					end
				end
				
				if makeEntrance then -- Entrance
					if coordI >= 0 and 2 * (result.range1[coordI - 1] + 1) + 1 == coordJ or coordI < 0 and 2 * result.range0[coordI + 1] == coordJ then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					elseif coordI >= 0 and 2 * (result.range1[coordI - 1] + 1) == coordJ or coordI < 0 and 2 * result.range0[coordI + 1] + 1 == coordJ then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					else 
						addModelFn("station/road/streetstation/" .. erastr .. "entr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					end
				end
			elseif coordJ == 0 then -- bottom
				if makeExit then -- Exit
					if coordI == 55 then
						if (result.range0[-2] or 1) ~= 1 and math.min(result.range0[-1], result.range0[-2] or 1) ==  math.min(math.min(result.range0[0], result.range0[1] or 1), math.min(result.range0[-2] or 1, result.range0[-1])) then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					elseif coordI >= 0 then
						if coordI > 0 and result.range0[coordI] > result.range0[coordI + 1] and result.range0[coordI-1] > result.range0[coordI + 1] and result.coordI2variantAndPos[coordI][1] == 0 then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						else
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					elseif coordI < 0 then
						if result.range0[coordI - 1] <= result.range0[coordI] and (coordI ~= result.leftLen + 1 or result.continueLeft) then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					end
					if (coordI == 55 and not false) or (coordI ~= 55 and coordI < 0) then -- no_right
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					end
				end
				
				if makeEntrance then -- Entrance
					if coordI == 55 then
						if ((result.range0[1] or 1) ~= 1 or needOuterRight) and math.min(result.range0[0], result.range0[1] or 1) ==  math.min(math.min(result.range0[0], result.range0[1] or 1), math.min(result.range0[-2] or 1, result.range0[-1])) then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) -- go right
						end
					elseif coordI >= 0 
							and (result.range0[coordI] >= math.min(result.range0[coordI + 1], result.range0[coordI + 2] or 1)
								or (result.range0[coordI - 1] == result.range0[coordI + 1] 
								and result.range0[coordI] == result.range0[coordI + 1])) 
							and (coordI ~= result.rightLen - 1 or needOuterRight) then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) -- go right
					elseif coordI < 0 then
						if result.range0[coordI - 1] < result.range0[coordI] and result.range0[coordI - 1] <= result.range0[coordI + 1] and result.coordI2variantAndPos[coordI][1] == 0 then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						else
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					end
					if (coordI == 55 and not false) then --  no_left
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) --  go straight
					end
					if (coordI ~= 55 and coordI >= 0) 
							and not ( math.min(result.range0[coordI + 1], result.range0[coordI]) > math.min(result.range0[coordI + 1], result.range0[coordI + 2] or 1)) then 
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) --  go straight
					end
				end
			elseif coordJ == 1 then -- top
				if makeExit then -- Exit
					if coordI == 55 then
						if (result.range1[1] or -1) ~= -1 and math.max(result.range1[0], result.range1[1] or -1) ==  math.max(math.max(result.range1[0], result.range1[1] or -1), math.max(result.range1[-2] or -1, result.range1[-1])) then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					elseif coordI >= 0 and (result.range1[coordI] <= result.range1[coordI + 1] or (result.range1[coordI - 1] == result.range1[coordI + 1] and result.range1[coordI] == result.range1[coordI + 1])) 
							and (coordI ~= result.rightLen - 1 or result.continueRight) and coordI ~= result.rightLen then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					elseif coordI < 0 then
						if result.range1[coordI - 1] > result.range1[coordI] and result.range1[coordI - 1] > result.range1[coordI + 1] and result.coordI2variantAndPos[coordI][1] == 0 then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						else
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					end
					if (coordI == 55 and not false) or (coordI ~= 55 and coordI >= 0) then -- no_left
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_l" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
					end
				end
				
				if makeEntrance then -- Entrance
					if coordI == 55 then
						if (result.range1[-2] or -1) ~= -1 and math.max(result.range1[-1], result.range1[-2] or -1) ==  math.max(math.max(result.range1[0], result.range1[1] or -1), math.max(result.range1[-2] or -1, result.range1[-1])) then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					elseif coordI >= 0 then
						if coordI > 0 
								and result.range1[coordI] < result.range1[coordI + 1]
								and result.range0[coordI-1] <= result.range1[coordI + 1] 
								and result.coordI2variantAndPos[coordI][1] == 0 then
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_spcl_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						else
							addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0)))
						end
					elseif coordI < 0
							and (result.range1[coordI] <= math.max(result.range1[coordI - 1], result.range1[coordI - 2] or -1)
								or (result.range1[coordI + 1] == result.range1[coordI - 1] 
								and result.range1[coordI] == result.range1[coordI - 1])) 
							and (coordI ~= result.leftLen + 1 or needOuterLeft) then
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) -- go right
					end
					if (coordI == 55 and not false) then -- no_right 
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) --  go straight
					end
					if (coordI ~= 55 and coordI < 0)
							and not ( math.max(result.range1[coordI - 1], result.range1[coordI]) < math.max(result.range1[coordI - 1], result.range1[coordI - 2] or -1)) then 
						addModelFn("station/road/streetstation/" .. erastr .. "entr_cntr_str_r" .. cat .. ".mdl", transf.transl(vec3.new(0.0, 5.0, 0.0))) --  go straight
					end
				end
			end
		end
		
		result.terrainAlignmentLists = {}
		result.groundFaces = {}
		result.terminateConstructionHook = function()	
			local cargoStation = { terminals = {}, tag = 0 }
			local passengerStation = { terminals = {}, tag = 1 }
			for coordI = leftLen, rightLen do
				local variant = coordI2varaintAndPos[coordI][1]
			
				local group = { terminals = {}, tag = coordI }
				-- local middle = coordI >= 0 and (range1[coordI] or 0) or (range0[coordI] or 0) -- stops vehicles at front, but will go past end of platform
				local middle = coordI < 0 and math.floor(((range1[coordI] or 0) + (range0[coordI] or 0)) / 2) or math.ceil(((range1[coordI] or 0) + (range0[coordI] or 0)) / 2)
			
				for coordJ = middle, (range1[coordI] or 0) do
					local terminalInfo = result.coord2terminalInfo[coordI][coordJ]
					table.insert(group.terminals, { terminalInfo.model, terminalInfo.terminal })
				end
				for coordJ = middle - 1, (range0[coordI] or 0), -1 do
					local terminalInfo = result.coord2terminalInfo[coordI][coordJ]
					table.insert(group.terminals, { terminalInfo.model, terminalInfo.terminal })
				end
				table.insert(result.terminalGroups, group)
				
				--print("new station " .. (variant  or "none"))
				table.insert(variant == 1 and cargoStation.terminals or passengerStation.terminals, #result.terminalGroups - 1)
			end
			
			if #passengerStation.terminals > 0 then table.insert(result.stations, passengerStation) end
			if #cargoStation.terminals > 0 then table.insert(result.stations, cargoStation) end
			
			local era = "era_a_"
			-- local cargo = "cargo_" -- change this
			if params.year then 
				if params.year > 1920 then era = "era_b_" end
				if params.year > 1980 then era = "era_c_" end
			end
			for i = leftLen, -1 do
				local eraOrCargo = result.coordI2variantAndPos[i][1] == 0 and era or cargo
			
				if result.coordI2variantAndPos[i][1] == 0 then
					local ln = result.range1[i] - result.range0[i]
					local pos = result.coordI2variantAndPos[i][2]
					if ln == 0 then
						local id = result.MangleId({i, result.range0[i], 0})
						local tf = transf.transl(vec3.new(pos + 12.5, result.range0[i] * platformLength - platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_1_l"], result.models, tf, "__module_" .. tostring(id))
					elseif ln == 1 then
						local id = result.MangleId({i, result.range0[i], 0})
						local tf = transf.transl(vec3.new(pos + 12.5, (result.range0[i] - 1) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_2_l"], result.models, tf, "__module_" .. tostring(id))
					elseif ln == 2 then
						local id = result.MangleId({i, result.range0[i]+1, 0})
						local tf = transf.transl(vec3.new(pos + 12.5, (result.range0[i] - 1) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_3_l"], result.models, tf, "__module_" .. tostring(id))
					elseif ln >= 3 then
						local id = result.MangleId({i, result.range0[i], 0})
						local tf = transf.transl(vec3.new(pos + 12.5, (result.range0[i] - 1) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_4_l_start"], result.models, tf, "__module_" .. tostring(id))
						local size = math.floor((ln - 1) / 2)
						local offs = ln % 2 == 1 and 0 or platformLength / 2
						for k = 0, size - 1 do
							local id = result.MangleId({i, result.range0[i]+ 2*k + 2, 0})
							tf = transf.transl(vec3.new(pos + 12.5, (result.range0[i] - 1)* platformLength + k * 2 * platformLength + offs, .0))
							constructionutil.addModels(generatedData[eraOrCargo .. "size_4_l_rep"], result.models, tf, "__module_" .. tostring(id))
						end
						local id = result.MangleId({i, result.range1[i], 0})
						tf = transf.transl(vec3.new(pos + 12, (result.range1[i] - 4) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_4_l_end"], result.models, tf, "__module_" .. tostring(id))
					end
				elseif result.coordI2variantAndPos[i][1] == 1 then
					local ln = result.range1[i] - result.range0[i]
					local pos = result.coordI2variantAndPos[i][2]
					for k = 0, ln do
						local id = result.MangleId({i, result.range0[i] + k, 1})
						local tf = transf.transl(vec3.new(pos + 15, (result.range0[i] - 1 + k)* platformLength, .0))
						constructionutil.addModels(generatedData["cargo_size_n_l_rep"], result.models, tf, "__module_" .. tostring(id))
					end
				end
			end
			for i = 0, rightLen do
				local eraOrCargo = result.coordI2variantAndPos[i][1] == 0 and era or cargo
				
				if result.coordI2variantAndPos[i][1] == 0 then
					local ln = result.range1[i] - result.range0[i]
					local pos = result.coordI2variantAndPos[i][2]
					if ln == 0 then
						local id = result.MangleId({i, result.range0[i], 0})
						local tf = transf.transl(vec3.new(pos - 12.5, result.range0[i] * platformLength - platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_1_r"], result.models, tf, "__module_" .. tostring(id))
					elseif ln == 1 then
						local id = result.MangleId({i, result.range0[i], 0})
						local tf = transf.transl(vec3.new(pos - 12.5, (result.range0[i] - 1) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_2_r"], result.models, tf, "__module_" .. tostring(id))
					elseif ln == 2 then
						local id = result.MangleId({i, result.range0[i]+1, 0})
						local tf = transf.transl(vec3.new(pos - 12.5, (result.range0[i] - 1) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_3_r"], result.models, tf, "__module_" .. tostring(id))
					elseif ln >= 3 then
						local id = result.MangleId({i, result.range0[i], 0})
						local tf = transf.transl(vec3.new(pos - 12.5, (result.range0[i] - 1) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_4_r_start"], result.models, tf, "__module_" .. tostring(id))
						local size = math.floor((ln - 1) / 2)
						local offs = ln % 2 == 1 and 0 or platformLength / 2
						for k = 0, size - 1 do
							local id = result.MangleId({i, result.range0[i] + 2*k + 2, 0})
							tf = transf.transl(vec3.new(pos - 12.5, (result.range0[i] - 1)* platformLength + k * 2 * platformLength + offs, .0))
							constructionutil.addModels(generatedData[eraOrCargo .. "size_4_r_rep"], result.models, tf, "__module_" .. tostring(id))
						end
						local id = result.MangleId({i, result.range1[i], 0})
						tf = transf.transl(vec3.new(pos - 12.5, (result.range1[i] - 4) * platformLength, .0))
						constructionutil.addModels(generatedData[eraOrCargo .. "size_4_r_end"], result.models, tf, "__module_" .. tostring(id))
					end
				elseif result.coordI2variantAndPos[i][1] == 1 then
					local ln = result.range1[i] - result.range0[i]
					local pos = result.coordI2variantAndPos[i][2]
					for k = 0, ln do
						local id = result.MangleId({i, result.range0[i] + k, 1})
						local tf = transf.transl(vec3.new(pos - 15, (result.range0[i] - 1 + k)* platformLength, .0))
						constructionutil.addModels(generatedData["cargo_size_n_r_rep"], result.models, tf, "__module_" .. tostring(id))
					end
				end
			end
			
			local faces = {}
			local oldJ = nil
			--table.insert(faces, vec3.new())
			if no_left and no_right then return end

			local cps = 5 -- half cargo platform 
			local pps = 2.5 -- half passenger platform
			local tds = 5 -- distance between tracks
			local d = 2 -- offset for face

			for i = leftLen, rightLen do
				local newJ = result.heightAt0[i]
				local newNextJ = math.min(result.range0[i + 1 + (i + 1 >= 0 and 1 or -1)] or 1, result.range0[i + 1] or 1)
				local pos = result.coordI2variantAndPos[i][2]
				local v = result.coordI2variantAndPos[i][1]
				local o = v == 1 and cps-d or pps-d
				local c = i == -1 and 20 or 5
				local en = 0
				if i == rightLen then
					en = i == -1 and 20 or (needOuterRight and 9 or 2)
				end
				local s = 0
				if i == leftLen then
					s = i == 0 and 20 or (needOuterLeft and 9 or 2)
				end
				table.insert(faces, {pos - o - s, (newJ - 1) * platformLength - 5, 0.0})
				table.insert(faces, {pos + o + en, (newJ - 1) * platformLength - 5, 0.0})
				local currJ = i >= 0 and result.range0[i] or math.min(result.range0[i], result.range0[i-1] or 1)
				if i ~= rightLen then
					if newNextJ < currJ then 
						table.insert(faces, {pos + o, (newNextJ - 1) * platformLength - 5, 0.0})
					elseif newNextJ > currJ then
						table.insert(faces, {pos + o + 2*d + c, (currJ - 1) * platformLength - 5, 0.0})
					end
				end
			end
			for i = rightLen, leftLen, -1 do
				local newJ = result.heightAt1[i]
				local newNextJ = math.max(result.range1[i + 1 + (i + 1 >= 0 and 1 or -1)] or -1, result.range1[i + 1] or -1)
				local pos = result.coordI2variantAndPos[i][2]
				local v = result.coordI2variantAndPos[i][1]
				local o = v == 1 and cps-d or pps-d
				local c = i == -1 and 20 or tds
				local en = 0
				if i == rightLen then
					en = i == -1 and 20 or (needOuterRight and 9 or 2)
				end
				local s = 0
				if i == leftLen then
					s = i == 0 and 20 or (needOuterLeft and 9 or 2)
				end
				local currJ = i >= 0 and result.range1[i] or math.max(result.range1[i], result.range1[i-1] or 1)
				if i ~= rightLen then
					if newNextJ > currJ then 
						table.insert(faces, {pos + o, (newNextJ + 1) * platformLength + 5, 0.0})
					elseif newNextJ < currJ then
						table.insert(faces, {pos + o + 2*d + c, (currJ + 1) * platformLength + 5, 0.0})
					end
				end
				table.insert(faces, {pos + o + en, (newJ + 1) * platformLength + 5, 0.0})
				table.insert(faces, {pos - o - s, (newJ + 1) * platformLength + 5, 0.0})
			end
			
			local faces2 = { type = "EQUAL", faces = { faces } }
			table.insert(result.terrainAlignmentLists, faces2)
			table.insert(result.groundFaces, {  
				face =  faces,
				modes = {
					{
						type = "FILL",
						key = "industry_floor_high_priority.gtex.lua"
					},
					{
						type = "STROKE_OUTER",
						key = "pedestrian_connection_border.lua"
					},
				}
			})
			
			-- constructionutil.makeFence(faces, "station/road/streetstation/era_a/border_straight_5m.mdl", 5, true, result.models, true, math.pi / 2)
			
		end
		
		if params.modules[result.MangleId({0, 0, 0})] == nil and params.modules[result.MangleId({-1, 0, 0})] == nil
			and params.modules[result.MangleId({0, 0, 1})] == nil and params.modules[result.MangleId({-1, 0, 1})] == nil
			and params.modules[result.MangleId({55, 0, 3})] == nil and params.modules[result.MangleId({55, 0, 4})] == nil and params.modules[result.MangleId({55, 0, 5})] == nil
			and params.modules[result.MangleId({55, 1, 3})] == nil and params.modules[result.MangleId({55, 1, 4})] == nil and params.modules[result.MangleId({55, 1, 5})] == nil then
			table.insert(result.models, { 
				id = "asset/icon/marker_exclamation.mdl",
				transf = transf.transl(vec3.new(0.0, 0.0, .0)),
			})
		end
		
		result.cat = cat
		result.erastr = erastr
		result.range0 = range0
		result.range1 = range1
		result.continueLeft = continueLeft
		result.continueRight = continueRight
		result.needOuterLeft = needOuterLeft
		result.needOuterRight = needOuterRight
		result.leftLen = leftLen
		result.rightLen = rightLen
		result.coordI2variantAndPos = coordI2varaintAndPos
		
		result.cost = 0
		
		result.colliders = { }

		return result
	end
}

end
